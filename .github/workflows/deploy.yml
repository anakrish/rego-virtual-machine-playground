name: Build and Deploy RVM Playground

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true
          
      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
        
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
            wasm-src/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          
      - name: Build WASM module
        run: |
          cd wasm-src
          wasm-pack build --target web --out-dir ../wasm --scope regorus
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Update app.js for production
        run: |
          # Enable real WASM loading by uncommenting import statements
          sed -i 's|// import init|import init|g' app.js
          sed -i 's|// await init()|await init()|g' app.js
          # Update WASM module references
          sed -i 's|this.wasmModule = {|// Mock implementation replaced with real WASM\n            this.wasmModule = { Engine, RegoVM, generateAssemblyListing, AssemblyConfig };\n            return;\n            this.wasmModule = {|g' app.js
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        if: github.ref == 'refs/heads/main'